1. avvio nuovo progetto laravel (con cartella repo vuota aperta su vs code):
    composer create-project --prefer-dist laravel/laravel:^7.0 .

2. creo il db vuoto con phpmyadmin (laravel_auth)

3. installo nel progetto la laravel/ui (parte frontend) che fornisce lo scaffolding Bootstrap e Vue fornito da Laravel:
    composer require laravel/ui:^2.4

4. installato il pacchetto laravel/ui, installo lo scaffolding frontend usando il comando Artisan ui:
    php artisan ui vue --auth (--auth crea giÃ  una struttura per l'autenticazione)

5. installo la node module per compilare gli asset:
    npm install
    npm run dev

6. mi aggancio al db dal .env. Ogni volta che si cambia qualcosa in questo file bisogna pulire la cache di configurazione:
    php artisan config:clear

7. faccio la migration per creare le tabelle a db:
    php artisan migrate

8. lancio il server per lo sviluppo:
    php artisan serve

9. verifico che tutto sia andato a buon fine:
    localhost:8000 -> welcome di laravel + login - register
    se provo a registrarmi vengo reindirizzato su http://localhost:8000/home dove mi compare la dashboard con il messaggio: "You are logged in!"

10. pulisco e organizzo il codice per dividere bene frontoffice da backoffice:

    - creo un controller uguale a quello che mi ha creato laravel al punto 4 (HomeController) ma sotto namespace Admin per separare la parte admin (autenticato) e la parte pubblica:
        php artisan make:controller Admin/HomeController

    - copio tutta la classe di HomeController, la incollo nell'HomeController appena creato (namespace: Admin) e cancello l'originale

    - cancello il costruttore all'interno della classe HomeController in modo da gestire il middleware con le rotte

    - definisco tutte le rotte del backoffice nel web.php:

        // definisco dentro un gruppo tutte le rotte che voglio proteggere con l'autenticazione:

        // tutte le rotte avranno lo stesso middleware ('auth');
        Route::middleware('auth')

            // tutte le rotte avranno lo stesso namespace (i controller saranno dentro la sottocartella 'Admin');
            ->namespace('Admin')

            // i nomi di tutte le rotte inizieranno con 'admin.';
            ->name('admin.')

            // tutte le rotte avranno lo stesso prefisso url '/admin/';
            ->prefix('admin')

            // inserisco tutte le rotte che devono essere protette da autenticazione (backoffice)
            ->group(function () {

                // /home/admin/
                Route::get('/home', 'HomeController@index')->name('home');

            });

    - lancio il comando per verificare le rotte:
        php artisan route:list

    
